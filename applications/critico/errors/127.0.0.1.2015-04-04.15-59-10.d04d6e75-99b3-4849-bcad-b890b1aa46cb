(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> can't assign to function call (default.py, line 663)"
p3
sS'layer'
p4
S'/home/dhruv/web2py/applications/critico/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\n\nINDEX_PAGE=\'index\'\nPRODUCT_INDEX_PAGE=\'product_index\'\nPRODUCT_PROFILE_PAGE=\'product_profile\'\nEDITION_MANAGER_PAGE=\'edition_manager\'\nEDITION_PROFILE_PAGE=\'edition_profile\'\nSUB_EDITION_PROFILE_PAGE=\'sub_edition_profile\'\nCONTRIBUTOR_MANAGER_PAGE=\'contributor_manager\'\nCONTRIBUTOR_PROFILE_PAGE=\'contributor_profile\'\n\nimport urllib2\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    if not session.auth:\n        redirect(URL(\'user\'))\n    print auth.user_id\n    userId = auth.user_id\n    userType = getAuthUserType(userId)\n    if userType == \'a\':\n        return userIndex()\n    elif userType == \'b\':\n        return productIndex()\n\ndef userIndex():\n    form = SQLFORM.factory(Field(\'product_name\', requires=[IS_NOT_EMPTY()]), submit_button=\'Search\')\n    if form.accepts(request, session):\n        redirect(URL((\'product_index/\'+form.vars.product_name)))\n    return dict(message=\'Hi user\', form=form)\n\ndef product_index():\n    print urllib2.unquote(request.args(0))\n    if isProductWithThisNameExists(urllib2.unquote(request.args(0))):\n        return getProductPage(getProductIdOf(urllib2.unquote(request.args(0))))\n    else:\n        return dict(message=\'Product not found!\', form=FORM())\n\n@auth.requires_login()\ndef getProductPage(prodId):\n    return dict(message=[getAuthBasedProductProfile(prodId), getAuthBasedAllEditonForm(prodId)], form=getAuthBasedReviewForm(\'product\', prodId))\n\n\ndef productIndex():\n    rows = db(db.product.admin_ref == auth.user_id).select()\n    if rows:\n        redirect(URL(urllib2.quote((\'product_index/\'+str(rows[0].name)))))\n\n    form = SQLFORM.factory(submit_button=\'Update Product Profile\')\n    if form.accepts(request, session):\n        prodId = getProductIdOrNewProductId()\n        redirect(URL((\'product_index/\'+str(auth.user_id))))\n    return dict(message=\'Hi Product Admin\', form=form)\n\ndef product_profile():\n    prodId = getProductWithThisAdminId()\n    return dict(form=getEditableProductProfile(prodId))\n\ndef edition_manager():\n    prodId = getProductWithThisAdminId()\n    return dict(form=getEditableEditionManager(prodId))\n\ndef edition_profile():\n    edId = request.vars.ed\n    prodId = int(request.vars.prod)\n\n    if edId == \'\':\n        edId = -1\n    else:\n        edId = int(edId)\n        if prodId != getEditionProductId(edId):\n            return\n    form = [getAuthBasedEditionForm(edId, prodId)]\n    form += getAuthBasedAllSubEditonForm(edId)\n    return dict(form=form)\n\ndef sub_edition_profile():\n    edId = int(request.vars.ed)\n    subEdId = request.vars.subed\n\n    if subEdId == \'\':\n        subEdId = -1\n    else:\n        subEdId = int(subEdId)\n        if edId != getSubEditionEditionId(subEdId):\n            return\n    return dict(form=getAuthBasedAllSubEditonForm(subEdId, edId))\n\ndef contributor_manager():\n    prodId = getProductIdOrNewProductId()\n    return dict(form=getContributorManager(prodId))\n\ndef contributor_profile():\n    contribId = request.vars.contrib\n    prodId = getProductIdOrNewProductId()\n    if contribId == \'\':\n        contribId = -1\n    else:\n        contribId = int(contribId)\n        if prodId != getContributorProductId(contribId):\n            return\n    return dict(form=getContributorProfile(contribId, prodId))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/register_user\n    http://..../[app]/default/user/register_product_admin\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    if request.args(0) == \'register\':\n        return dict(form=getRegistrationOptionForm())\n    elif request.args(0) == \'register_user\':\n        return dict(form=getUserRegistrationForm())\n    elif request.args(0) == \'register_product_admin\':\n        return dict(form=getProductAdminRegistrationForm())\n    elif request.args(0) == \'profile\':\n        return dict(form=getProfileForm())\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\n\'\'\'\nUser Functions\nStart\n\'\'\'\n\ndef selectAuthUser(userId):\n    return db(db.auth_user.id == userId).select()\n\ndef getAuthUserFirstName(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].first_name\n\ndef getAuthUserLastName(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].last_name\n\ndef getAuthUserUserName(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].username\n\ndef getAuthUserPicBlob(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].display_picture_blob\n\ndef getAuthUserPicName(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].display_picture_name\n\ndef getAuthUserEMail(userId):\n    rows = selectAuthUser(userId)\n    if rows:\n        return rows[0].email\n\ndef updateAuthUserUserType(userId, userType):\n    db(db.auth_user.id == userId).update(user_type = userType)\n\ndef makeAuthUSerUser(userId):\n    updateAuthUserUserType(userId, \'a\')\n\ndef makeAuthUSerSoapAdmin(userId):\n    updateAuthUserUserType(userId, \'b\')\n\ndef approveAuthUser(userId):\n    db(db.auth_user.id == userId).update(registration_key=\'\')\n\ndef getUserRegistrationForm():\n    form = getRegistrationForm()\n    if form.accepts(request, session):\n        makeAuthUSerUser(form.vars.id)\n        approveAuthUser(form.vars.id)\n    return form\n\ndef getProductAdminRegistrationForm():\n    form = getRegistrationForm()\n    if form.accepts(request, session):\n        makeAuthUSerSoapAdmin(form.vars.id)\n        approveAuthUser(form.vars.id)   ## ------------------- This line will be removed in production\n    return form\n\ndef disalbeAuthFieldReadOrWrite(fieldList):\n    for field in fieldList:\n        db.auth_user[field].readable = db.auth_user[field].writable = False\n\ndef getRegistrationForm():\n    disalbeAuthFieldReadOrWrite([\'gender\', \'date_of_birth\', \'country\', \'state_\', \'city\', \'display_picture_name\', \'display_picture_blob\'])\n    return auth.register()\n\ndef getRegistrationOptionForm():\n    form = SQLFORM.factory(submit_button=\'Users, Click here!\')\n    form.add_button(\'Product Admin, Click Here!\', URL(\'user/register_product_admin\'))\n    if form.accepts(request, session):\n        redirect(URL(\'user/register_user\'))\n    return form\n\n@auth.requires_login()\ndef getProfileForm():\n    disalbeAuthFieldReadOrWrite([\'username\'])\n    return auth.profile()\n\ndef getAuthUserType(userId):\n    return db(db.auth_user.id == userId).select()[0].user_type\n\n\'\'\'\nUser Functions\nEnd\n\'\'\'\n\n\'\'\'\nProduct Functions\nStart\n\'\'\'\ndef insertProduct(prodName, picName, picBlob):\n    return db.product.insert(name=prodName, display_picture_name=picName, display_picture_blob=picBlob)\n\ndef initProduct():\n    return db.product.insert()\n\ndef selectProduct(prodId):\n    return db(db.product.id == prodId).select()\n\ndef isProductWithThisIdExists(prodId):\n    if not selectProduct(prodId):\n        return False\n    else:\n        return True\n\ndef isThisIsTheProductAdmin(prodId, userId):\n    rows = selectProduct(prodId)\n    if rows:\n        if rows[0].admin_ref == userId:\n            return True\n    return False\n\ndef getProductIdOf(prodName):\n    if isProductWithThisNameExists(prodName):\n        return db(db.product.name == prodName).select()[0].id\n    else:\n        return -1\n\ndef isProductWithThisNameExists(prodName):\n    if not db(db.product.name == prodName).select():\n        return False\n    else:\n        return True\n\ndef getProductName(prodId):\n    rows = selectProduct(prodId)\n    if rows:\n        return rows[0].name\n\ndef updateProductName(prodId, name_):\n    rows = selectProduct(prodId)\n    if rows:\n        db(db.product.id == prodId).update(name=name_)\n\ndef getProductPicName(prodId):\n    rows = selectProduct(prodId)\n    if rows:\n        return rows[0].display_picture_name\n\ndef updateProductPicName(prodId, picName):\n    rows = selectProduct(prodId)\n    if rows:\n        db(db.product.id == prodId).update(display_picture_name=picName)\n\ndef getProductPicBlob(prodId):\n    rows = selectProduct(prodId)\n    if rows:\n        return rows[0].display_picture_blob\n\ndef updateProductPicBlob(prodId, picBlob):\n    rows = selectProduct(prodId)\n    if rows:\n        db(db.product.id == prodId).update(display_picture_blob=picBlob)\n\n\ndef updateProductPic(prodId, picName, picBlob):\n    db(db.product.id == prodId).update(display_picture_name=picName, display_picture_blob=picBlob)\n\ndef getProductIdOrNewProductId():\n    val = getProductWithThisAdminId()\n    if val == -1:\n        return initProduct()\n    else:\n        return val\n\ndef getProductWithThisAdminId():\n    rows = db(db.product.admin_ref == auth.user_id).select()\n    if(not rows):\n        return -1\n    else:\n        return rows[0].id\n\ndef getEditableProductProfile(prodId):\n    update = db.product(prodId)\n    form = SQLFORM(db.product, update, submit_button=\'Apply Changes\', showid=False, upload=URL(r=request,f=\'download\'))\n    form.add_button(\'Back\', URL(INDEX_PAGE))\n    if form.accepts(request, session):\n        redirect(URL(PRODUCT_PROFILE_PAGE))\n    return form\n\n\ndef getNonEditableProductProfile(prodId):\n    update = db.product(prodId)\n    form = SQLFORM(db.product, update, buttons=[], showid=False, upload=URL(r=request,f=\'download\'))\n    return form\n\ndef getAuthBasedProductProfile(prodId):\n    if isThisIsTheProductAdmin(prodId, auth.user_id):\n        return getEditableProductProfile(prodId)\n    else:\n        return getNonEditableProductProfile(prodId)\n\n\'\'\'\nProduct Functions\nEnd\n\'\'\'\n\n\'\'\'\nEdition Functions\nStart\n\'\'\'\n\ndef insertEdition(prodId, name_, number_, dor, desc, picName, picBlob):\n    return db.edition.insert(product_ref=prodId, name=name_, number=number_, date_of_release=dor, description=desc, display_picture_name=picName, display_picture_blob=picBlob)\n\ndef initEdition(prodId):\n    return db.edition.insert(product_ref=prodId)\n\ndef isEditionWithThisIdExists(edId):\n    if not db(db.edition.id == edId).select():\n        return False\n    else:\n        return True\n\ndef selectEdition(edId):\n    return db(db.edition.id == edId).select()\n\ndef isThisTheEditionAdmin(edId, userId):\n    prodId = getProductWithThisAdminId()\n    rows = selectEdition(edId)\n    if rows:\n        if rows[0].product_ref == prodId:\n            return True\n    return False\n\ndef getEditionProductId(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].product_ref\n\ndef updateEditionProductId(edId, prodId):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(product_ref=prodId)\n\ndef getEditionName(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].name\n\ndef updateEditionName(edId, name_):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(name=name_)\n\ndef getEditionNumber(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].number_\n\ndef updateEditionNumber(edId, num):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(number_=num)\n\ndef getEditionDOR(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].date_of_release\n\ndef updateEditionDOR(edId, dor):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(date_of_release=dor)\n\ndef getEditionDesc(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].description\n\ndef updateEditionDesc(edId, desc):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(description=desc)\n\ndef getEditionPicName(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].display_picture_name\n\ndef updateEditionPicName(edId, name_):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(display_picture_name=name_)\n\ndef getEditionPicBlob(edId):\n    rows = selectEdition(edId)\n    if rows:\n        return rows[0].display_picture_blob\n\ndef updateEditionPicBlob(edId, picBlob):\n    rows = selectEdition(edId)\n    if rows:\n        db(db.edition.id == edId).update(display_picture_blob=blob)\n\n## Returns listof  editions if exists else -1\ndef getEditionsWithThisProductId(prodId):\n    rows = db(db.edition.product_ref == prodId).select()\n    if(not rows):\n        return -1\n    else:\n        return rows\n\ndef getEditableEditionManager(prodId):\n    form = SQLFORM.factory(submit_button=\'Add Edition\')\n    form.add_button(\'Back\', URL(INDEX_PAGE))\n    rows = db(db.edition.product_ref == prodId).select()\n    for row in rows:\n        str_=(\'Edit Edition #\' + str(row.number_))\n        form.add_button(str_, URL(EDITION_PROFILE_PAGE, vars=dict(ed=str(row.id))))\n    if form.accepts(request, session):\n        redirect(URL(EDITION_PROFILE_PAGE, vars=dict(ed=\'\')))\n    return form\n\ndef getAuthBasedEditionForm(edId, prodId):\n    if isThisIsTheProductAdmin(prodId, auth.user_id):\n        return getEditableEditionForm(edId, prodId)\n    else:\n        return getNonEditableEditionForm(edId, prodId)\n    \'\'\'  ## for sub editions\n    rows = db(db.sub_edition.edition_ref == edId).select()\n    for row in rows:\n        str_=(\'Edit Sub Edition #\' + str(row.number_))\n        form.add_button(str_, URL(SUB_EDITION_PROFILE_PAGE, vars=dict(ed=str(edId), subed=str(row.id))))\n    if isEditionWithThisIdExists(edId):\n        form.add_button(\'Add sub edition\', URL(SUB_EDITION_PROFILE_PAGE, vars=dict(ed=str(edId), subed=\'\')))\n    ## -----\n    \'\'\'\n\n\ndef getNonEditableEditionProfile(edId, prodId):\n    update = db.edition(edId)\n    form = SQLFORM(db.edition, update, showid=False, buttons=[], upload=URL(r=request,f=\'download\'))\n    return form\n\ndef getNonEditableEditionManager(prodId):\n    allEditions = getEditionsWithThisProductId(prodId)\n    allEditonForms = []\n    for ed in allEditions:\n        allEditonForms.append(getNonEditableEditionProfile(ed.id, prodId))\n    return allEditonForms\n\n\ndef getLinkToEditionPageAsTR(edId, prodId):\n    return TR(TD(LABEL(\'URL\'), _class="w2p_fl"), TD(A(XML(\'url\'), _href=URL(EDITION_PROFILE_PAGE,  vars=dict(ed=str(edId), prod=str(prodId)))), _class="w2p_fw"))\n\ndef getEditableEditionForm(edId, prodId):\n    update = db.edition(edId)\n    submitBtnStr = \'Apply Changes\'\n    if not update:\n        db.edition.product_ref.default = prodId\n        submitBtnStr = \'Submit\'\n    form = SQLFORM(db.edition, update, deletable=True, showid=False, submit_button=submitBtnStr, upload=URL(r=request,f=\'download\'))\n\n    form[0].insert(-1,getLinkToEditionPageAsTR(edId, prodId))\n\n    if form.accepts(request, session):\n        response.flash="Submitted"\n    return form\n\ndef getButtonToAddEditon(prodId):\n    addForm = getEditableEditionForm(-1, prodId)\n    form = SQLFORM.factory(submit_button=\'Add Edition!\')\n    if form.accepts(request, session):\n        return addForm\n    return form\n\ndef getNonEditableEditionForm(edId, prodId):\n    update = db.edition(edId)\n    form = SQLFORM(db.edition, update, buttons=[], showid=False)\n    form[0].insert(-1,getLinkToEditionPageAsTR(edId, prodId))\n    return form\n\ndef getAllEditonForms(prodId):\n    rows = getEditionsWithThisProductId(prodId)\n    if rows == -1:\n        return []\n    formList = []\n    check = isThisIsTheProductAdmin(prodId, auth.user_id)\n    for row in rows:\n        if check:\n            formList.append(getEditableEditionForm(row.id, prodId))\n        else:\n            formList.append(getNonEditableEditionForm(row.id, prodId))\n    return formList\n\ndef getAuthBasedButtonToAddEdition(prodId):\n    if not isThisIsTheProductAdmin(prodId, auth.user_id):\n        return SQLFORM.factory(buttons=[])\n    else:\n        return getButtonToAddEditon(prodId)\n\ndef getAuthBasedAllEditonForm(prodId):\n    form = getAuthBasedButtonToAddEdition(prodId)\n    allForms = getAllEditonForms(prodId)\n    allForms.append(form)\n    return allForms\n\n\'\'\'\nEdition Functions\nEnd\n\'\'\'\n\n\'\'\'\nSub Edition Functions\nStart\n\'\'\'\ndef insertSubEdition(prodId, edId, name_, number_, dor, desc, picName, picBlob):\n    return db.sub_edition.insert(product_ref=prodId, edition_ref=edId, name=name_, number=number_, date_of_release=dor, description=desc, display_picture_name=picName, display_picture_blob=picBlob)\n\ndef initSubEdition(prodId, edId):\n    return db.sub_edition.insert(product_ref=prodId, edition_ref=edId)\n\ndef isSubEditionWithThisIdExists(subEdId):\n    if not db(db.sub_edition.id == subEdId).select():\n        return False\n    else:\n        return True\n\ndef selectSubEdition(subEdId):\n    return db(db.sub_edition.id == subEdId).select()\n\ndef getSubEditionEditionId(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].edition_ref\n\ndef updateSubEditionEditionId(subEdId, edId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(edition_ref=edId)\n\ndef getSubEditionProductId(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].product_ref\n\ndef updateSubEditionProductId(subEdId, prodId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(product_ref=prodId)\n\ndef getSubEditionName(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].name\n\ndef updateSubEditionName(subEdId, name_):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(name=name_)\n\ndef getSubEditionNumber(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].number_\n\ndef updateSubEditionNumber(subEdId, num):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(number_=num)\n\ndef getSubEditionDOR(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].date_of_release\n\ndef updateSubEditionDOR(subEdId, dor):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(date_of_release=dor)\n\ndef getSubEditionDesc(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].description\n\ndef updateSubEditionDesc(subEdId, desc):\n    rows = selectSubEdition(subEdId), showid=False\n    if rows:\n        db(db.sub_edition.id == subEdId).update(display_picture_name=name_)\n\ndef getSubEditionPicBlob(subEdId):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        return rows[0].display_picture_blob\n\ndef updateSubEditionPicBlob(subEdId, picBlob):\n    rows = selectSubEdition(subEdId)\n    if rows:\n        db(db.sub_edition.id == subEdId).update(display_picture_blob=blob)\n\n## Returns list of sub editions if exists else -1\ndef getSubEditionsWithThisEditionId(edId):\n    rows = db(db.sub_edition.edition_ref == edId).select()\n    if(not rows):\n        return -1\n    else:\n        return rows\n\ndef getSubEditionProfile(contribId, edId, prodId):\n    update = db.contributor(contribId)\n    if not update:\n        db.sub_edition.product_ref.default = prodId\n        db.sub_edition.edition_ref.default = edId\n\n    form = SQLFORM(db.sub_edition, update, deletable=True, showid=False, submit_button=\'Apply Changes\', upload=URL(r=request,f=\'download\'))\n    \n    form.add_button(\'Back\', URL(EDITION_PROFILE_PAGE,  vars=dict(ed=str(edId))))\n\n    ## for videos\n    \'\'\'\n    rows = db(db.sub_edition.product_ref == edId).select()\n    for row in rows:\n        str_=(\'Edit Sub Edition #\' + str(row.number_))\n        form.add_button(str_, URL(SUB_EDITION_PROFILE_PAGE, vars=dict(ed=str(edId), subed=str(row.id))))\n    if isEditionWithThisIdExists(edId):\n        form.add_button(\'Add sub edition\', URL(SUB_EDITION_PROFILE_PAGE, vars=dict(ed=str(edId), subed=\'\')))\n    \'\'\'\n    ## -----\n    if form.accepts(request, session):\n        if form.deleted:\n            redirect(URL(EDITION_PROFILE_PAGE, vars=dict(ed=str(edId))))\n        else:\n            redirect(URL(SUB_EDITION_PROFILE_PAGE,  vars=dict(subed=str(form.vars.id),ed=str(edId))))\n    return form\n\n\ndef getLinkToSubEditionPageAsTR(subEdId, edId):\n    return TR(TD(LABEL(\'URL\'), _class="w2p_fl"), TD(A(XML(\'url\'), _href=URL(SUB_EDITION_PROFILE_PAGE, vars=dict(subed=str(subEdId), vars=dict(ed=str(edId)))), _class="w2p_fw")))\n\ndef getEditableSubEditionForm(subEdId, edId):\n    update = db.sub_edition(subEdId)\n    submitBtnStr = \'Apply Changes\'\n    if not update:\n        db.sub_edition.edition_ref.default = edId\n        submitBtnStr = \'Submit\'\n    form = SQLFORM(db.sub_edition, update, deletable=True, showid=False, submit_button=submitBtnStr, upload=URL(r=request,f=\'download\'))\n\n    form[0].insert(-1,getLinkToSubEditionPageAsTR(subEdId, edId))\n\n    if form.accepts(request, session):\n        response.flash="Submitted"\n    return form\n\ndef getButtonToAddSubEditon(edId):\n    addForm = getEditableSubEditionForm(-1, edId)\n    form = SQLFORM.factory(submit_button=\'Add Sub-Edition!\')\n    if form.accepts(request, session):\n        return addForm\n    return form\n\ndef getNonEditableSubEditionForm(subEdId, edId):\n    update = db.sub_edition(subEdId)\n    form = SQLFORM(db.sub_edition, update, buttons=[], showid=False)\n    form[0].insert(-1,getLinkToEditionPageAsTR(subEdId, edId))\n    return form\n\ndef getAllSubEditonForms(edId):\n    rows = getSubEditionsWithThisEditionId(edId)\n    if rows == -1:\n        return []\n    formList = []\n    check = isThisTheEditionAdmin(edId, auth.user_id)\n    for row in rows:\n        if check:\n            formList.append(getEditableSubEditionForm(row.id, edId))\n        else:\n            formList.append(getNonEditableSubEditionForm(row.id, edId))\n    return formList\n\ndef getAuthBasedButtonToAddSubEdition(edId):\n    if not isThisTheEditionAdmin(edId, auth.user_id):\n        return SQLFORM.factory(buttons=[])\n    else:\n        return getButtonToAddSubEditon(edId)\n\ndef getAuthBasedAllSubEditonForm(prodId):\n    form = getAuthBasedButtonToAddSubEdition(prodId)\n    allForms = getAllSubEditonForms(prodId)\n    allForms.append(form)\n    return allForms\n\n\'\'\'\nSub Edition Functions\nEnd\n\'\'\'\n\n\'\'\'\nContributor Functions\nStart\n\'\'\'\ndef insertContributor(prodId, name_1, name_2, role_, url_, picName, picBlob):\n    return db.contributor.insert(product_ref=prodId, real_name=name_1, character_name=name_2, role=role_, url=url_, display_picture_name=picName, display_picture_blob=picBlob)\n\ndef initContributor(prodId):\n    return db.contributor.insert(product_ref=prodId)\n\ndef isContributorWithThisIdExists(contribId):\n    if not db(db.contributor.id == contribId).select():\n        return False\n    else:\n        return True\n\ndef selectContributor(contribId):\n    return db(db.contributor.id == contribId).select()\n\ndef getContributorProductId(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].product_ref\n\ndef updateContributorProductId(contribId, prodId):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(product_ref=prodId)\n\ndef getContributorRealName(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].real_name\n\ndef updateContributorRealName(contribId, name_):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(real_name=name_)\n\ndef getContributorCharacterName(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].character_name\n\ndef updateContributorCharacterName(contribId, name_):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(character_name=name_)\n\ndef getContributorRole(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].role\n\ndef updateContributorRole(contribId, role_):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(role=role_)\n\n\ndef getContributorURL(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].url\n\ndef updateContributorURL(contribId, url_):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(url=url_)\n\ndef getContributorPicName(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].display_picture_name\n\ndef updateContributorPicName(contribId, name_):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(display_picture_name=name_)\n\ndef getContributorPicBlob(contribId):\n    rows = selectContributor(contribId)\n    if rows:\n        return rows[0].display_picture_blob\n\ndef updateContributorPicBlob(contribId, picBlob):\n    rows = selectContributor(contribId)\n    if rows:\n        db(db.contributor.id == contribId).update(display_picture_blob=blob)\n\n## Returns list of sub editions if exists else -1\ndef getContributorsWithThisProductId(contribId):\n    rows = db(db.contributor.edition_ref == contribId).select()\n    if(not rows):\n        return -1\n    else:\n        return rows\n\ndef getContributorManager(prodId):\n    form = SQLFORM.factory(submit_button=\'Add Contributor\')\n    \n    form.add_button(\'Back\', URL(INDEX_PAGE))\n    rows = db(db.contributor.product_ref == prodId).select()\n    \n    for row in rows:\n        str_=(\'Edit Contributor Profile: \' + str(row.real_name))\n        form.add_button(str_, URL(CONTRIBUTOR_PROFILE_PAGE, vars=dict(contrib=str(row.id))))\n    \n    if form.accepts(request, session):\n        redirect(URL(CONTRIBUTOR_PROFILE_PAGE, vars=dict(contrib=\'\')))\n    return form\n\ndef getContributorProfile(contribId, prodId):\n    update = db.contributor(contribId)\n    if not update:\n        db.contributor.product_ref.default = prodId\n    \n    form = SQLFORM(db.contributor, update, deletable=True, showid=False, submit_button=\'Apply Changes\', upload=URL(r=request,f=\'download\'))\n    \n    form.add_button(\'Back\', URL(CONTRIBUTOR_MANAGER_PAGE))\n    \n    if form.accepts(request, session):\n        if form.deleted:\n            redirect(URL(CONTRIBUTOR_MANAGER_PAGE))\n        else:\n            redirect(URL(CONTRIBUTOR_PROFILE_PAGE,  vars=dict(contrib=str(form.vars.id))))\n    return form\n\n\n\n\'\'\'\nContributor Functions\nEnd\n\'\'\'\n\n\'\'\'\nReview Functions\nStart\n\'\'\'\ndef insertReview(type_, prodId, edId, subEdId, revId, title_, desc):\n    db.review.insert(for_type=type_, product_ref=prodId, edition_ref=edId, sub_edition_ref=subEdId, review_ref=revId, title=title_, description=desc)\n\ndef initReview(type_, typeId):\n    if type_ == \'product\':\n        return db.review.insert(for_type=type_, product_ref=typeId)\n    elif type_ == \'edition\':\n        return db.review.insert(for_type=type_, edition_ref=typeId)\n    elif type_ == \'sub_edition\':\n        return db.review.insert(for_type=type_, sub_edition_ref=typeId)\n    elif type_ == \'reply\':\n        return db.review.insert(for_type=type_, review_ref=typeId)\n    return -1\n\n\ndef selectReview(revId):\n    return db(db.review.id == revId).select()\n\ndef isReviewWrittenByThisUser(revId):\n    rows = selectReview(revId)\n    if rows:\n        if rows[0].user_ref == auth.user_id:\n            return True\n        else:\n            return False\n    else:\n        return True ## TRIVIALLY TRUE BECAUSE REVIEW DOES NOT EXIST\n\ndef updateReviewType(revId, type_):\n    rows = selectReview(revId)\n    if rows and type_ in [\'product\', \'sub_edition\', \'edition\', \'reply\']:\n        db(db.review.id == revId).update(for_type = type_)\n\ndef updateReviewProductRef(revId, prodId):\n    rows = selectReview(revId)\n    if rows:\n        db(db.review.id == revId).update(product_ref=prodId)\n\ndef updateReviewEditionRef(revId, edId):\n    rows = selectReview(revId)\n    if rows:\n        db(db.review.id == revId).update(edition_ref=edId)\n\ndef updateReviewSubEditionRef(revId, subEdId):\n    rows = selectReview(revId)\n    if rows:\n        db(db.review.id == revId).update(sub_edition_ref=subEdId)\n\ndef updateReviewReplyRef(revId, repId):\n    rows = selectReview(revId)\n    if rows:\n        db(db.review.id == revId).update(review_ref=repId)\n\ndef deleteReview(revId):\n    rows = selectReview(revId)\n    if rows:\n        db(db.review.id == revId).delete()\n\ndef updateReviewTypeNTypeId(revId, type_, typeId):\n    rows = selectReview(revId)\n    if rows:\n        updateReviewType(revId, type_)\n        if(type_ == \'product\'):\n            updateReviewProductRef(revId, typeId)\n        elif(type_ == \'edition\'):\n            updateReviewEditionRef(revId, typeId)\n        elif(type_ == \'sub_edition\'):\n            updateReviewSubEditionRef(revId, typeId)\n        elif(type_ == \'reply\'):\n            updateReviewReplyRef(revId, typeId)\n\ndef getReviewUserId(revId):\n    rows = selectReview(revId)\n    if rows:\n        return rows[0].user_ref\n    else:\n        return auth.user_id\n\ndef getReviewUserFirstNameAsTR(userId):\n    return TR(TD(LABEL(\'By Firstname: \'), _class="w2p_fl"), TD(INPUT(value=str(getAuthUserFirstName(userId)), _type=\'string\', _readonly=\'readonly\'), _class="w2p_fw"))\n\ndef getReviewUserUserNameAsTR(userId):\n    return TR(TD(LABEL(\'By Username: \'), _class="w2p_fl"), TD(INPUT(value=str(getAuthUserUserName(userId)), _type=\'string\', _readonly=\'readonly\'), _class="w2p_fw"))\n\ndef getEditableReviewForm(revId, type_, typeId):\n    update = db.review(revId)\n    submitBtnStr = \'Apply Changes\'\n    if not update:\n        if type_ in [\'product\', \'sub_edition\', \'edition\', \'reply\']:\n            db.review.for_type.default = type_\n        else:\n            return -1\n        if(type_ == \'product\'):\n            db.review.product_ref.default = typeId\n        elif(type_ == \'edition\'):\n            db.review.edition_ref.default = typeId\n        elif(type_ == \'sub_edition\'):\n            db.review.sub_edition_ref.default = typeId\n        elif(type_ == \'reply\'):\n            db.review.reply_ref.default = typeId\n        submitBtnStr = \'Submit\'\n\n    userId = getReviewUserId(revId)\n\n    form = SQLFORM(db.review, update, submit_button=submitBtnStr, showid=False, deletable=True, upload=URL(r=request,f=\'download\'))\n    \n    userName = getReviewUserFirstNameAsTR(userId)\n    form[0].insert(-1,userName)\n\n    userName = getReviewUserUserNameAsTR(userId)\n    form[0].insert(-1,userName)\n\n\n    if form.accepts(request, session):\n        response.flash = \'Submitted!\'\n    return form\n\ndef getNonEditableReviewForm(revId):\n    update = db.review(revId)\n    form = SQLFORM(db.review, update, buttons=[])\n\n    userId = getReviewUserId(revId)\n    userName = getReviewUserFirstNameAsTR(userId)\n    form[0].insert(-1,userName)\n\n    userName = getReviewUserUserNameAsTR(userId)\n    form[0].insert(-1,userName)\n\n    return form\n\ndef getButtonToAddReview(type_, typeId):\n    addForm = getEditableReviewForm(-1, type_, typeId)\n    form = SQLFORM.factory(submit_button=\'Write review!\')\n    if form.accepts(request, session):\n        return addForm\n    return form\n\ndef getButtonToEditReview(revId, type_, typeId):\n    editForm = getEditableReviewForm(revId, type_, typeId)\n    form = SQLFORM.factory(submit_button=\'Edit review!\')\n    if form.accepts(request, session):\n        return editForm\n    return form\n\ndef getButtonToDeleteReview(revId):\n    form = SQLFORM.factory(submit_button=\'Edit review!\')\n    if form.accepts(request, session):\n        deleteReview(revId)\n    return form\n\ndef getTypeNTypeIdBasedReviews(type_, typeId):\n    if(type_ == \'product\'):\n        return db(db.review.for_type == \'product\' and db.review.product_ref == typeId).select()\n    elif(type_ == \'edition\'):\n        return db(db.review.for_type == \'edition\' and db.review.edition_ref == typeId).select()\n    elif(type_ == \'sub_edition\'):\n        return db(db.review.for_type == \'sub_edition\' and db.review.sub_edition_ref == typeId).select()\n    elif(type_ == \'reply\'):\n        return db(db.review.for_type == \'reply\' and db.review.reply_ref == typeId).select()\n\ndef getAllReviewForms(type_, typeId):\n    rows = getTypeNTypeIdBasedReviews(type_, typeId)\n    formList = []\n    for row in rows:\n        if isReviewWrittenByThisUser(row.id):\n            formList.append(getEditableReviewForm(row.id, type_, typeId))\n        else:\n            formList.append(getNonEditableReviewForm(row.id))\n    return formList\n\ndef getAuthBasedButtonToAddReview(type_, typeId):\n    if auth.user.user_type == \'b\':\n        return SQLFORM.factory(buttons=[])\n    else:\n        return getButtonToAddReview(type_, typeId)\n\ndef getAuthBasedReviewForm(type_, typeId):\n    form = getAuthBasedButtonToAddReview(type_, typeId)\n    allForms = getAllReviewForms(type_, typeId)\n    allForms.append(form)\n    return allForms\n\n\'\'\'\nReview Functions\nEnd\n\'\'\'\nresponse._vars=response._caller(edition_profile)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S"'rows = selectSubEdition(subEdId), showid=False\\n'"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S"'/home/dhruv/web2py/applications/critico/controllers/default.py'"
p37
sS'lineno'
p38
S'663'
p39
sS'msg'
p40
S'"can\'t assign to function call"'
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'("can\'t assign to function call", (\'/home/dhruv/web2py/applications/critico/controllers/default.py\', 663, None, \'rows = selectSubEdition(subEdId), showid=False\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'None'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S"can't assign to function call (default.py, line 663)"
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S's\xbea\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>critico</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-05ed102d-3ffa-437e-9a15-56a543746e13<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_critico</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sample_app</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0d057cb9-cdf5-4682-b07b-898dc068f898<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_soapcharts</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9d21a5b9-a60d-4b30-8745-96479721b4e5<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_soapcharts=127.0.0.1-9d21a5b9-a60d-4b30-8745-96479721b4e5; session_id_sample_app=127.0.0.1-0d057cb9-cdf5-4682-b07b-898dc068f898; session_id_admin=127.0.0.1-05ed102d-3ffa-437e-9a15-56a543746e13; session_id_critico=127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/critico/default/product_index/chiggypp</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/critico/default/edition_profile</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>ed=16&amp;prod=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>49726</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>dhruv-Lenovo-Y50-70</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/dhruv/web2py/applications/critico/&#x27;, &#x27;/home/dhruv/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f68e8edff80: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;dhruv-Lenovo-Y50-70&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/dhruv/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_soapcharts=127.0.0.1-9d21a5b9-a60d-4b30-8745-96479721b4e5; session_id_sample_app=127.0.0.1-0d057cb9-cdf5-4682-b07b-898dc068f898; session_id_admin=127.0.0.1-05ed102d-3ffa-437e-9a15-56a543746e13; session_id_critico=127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/critico/default/product_index/chiggypp</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>dhruv-Lenovo-Y50-70</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/critico/default/edition_profile</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>ed=16&amp;prod=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>49726</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/critico/default/edition_profile?ed=16&amp;prod=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>dhruv-Lenovo-Y50-70</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.12-stable+timestamp.2015.01.17.06.11.03</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f68eff021e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f68e917e258&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f68c48eba50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f68eff021e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f68e917e258&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f68c48eba50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py/applications/critico/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>edition_profile</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/dhruv/web2py/applications/critico/&#x27;, &#x27;/home/dhruv/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f68e8edff80: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;dhruv-Lenovo-Y50-70&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/dhruv/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>dhruv-Lenovo-Y50-70</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.12-stable+timestamp.2015.01.17.06.11.03</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 4, 4, 15, 59, 10, 341726)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/critico/default/edition_profile</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 4, 4, 10, 29, 10, 341742)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>critico/127.0.0.1.2015-04-04.15-59-10.d04d6e75-99b3-4849-bcad-b890b1aa46cb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f68eea302d0&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/home/dhruv/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'code'
p78
S"'# -*- coding: utf-8 -*-\\n# this file is released ...response._vars=response._caller(edition_profile)\\n'"
p79
sS'layer'
p80
S"'/home/dhruv/web2py/applications/critico/controllers/default.py'"
p81
sS'global compile2'
p82
S'<function compile2>'
p83
sS'ccode'
p84
S'undefined'
p85
ssS'lnum'
p86
I223
sS'lines'
p87
(dp88
I224
S'        exec ccode in environment'
p89
sI225
S'    except HTTP:'
p90
sI226
S'        raise'
p91
sI227
S'    except RestrictedError:'
p92
sI218
S"    environment['__name__'] = '__restricted__'"
p93
sI219
S'    try:'
p94
sI220
S'        if isinstance(code, types.CodeType):'
p95
sI221
S'            ccode = code'
p96
sI222
S'        else:'
p97
sI223
S'            ccode = compile2(code, layer)'
p98
ssS'call'
p99
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...response._vars=response._caller(edition_profile)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/home/dhruv/web2py/applications/critico/controllers/default.py')"
p100
sS'func'
p101
S'restricted'
p102
sa(dp103
g74
S'/home/dhruv/web2py/gluon/restricted.py'
p104
sg76
(dp105
S'builtincompile'
p106
S'<built-in function compile>'
p107
sS'code'
p108
S"'# -*- coding: utf-8 -*-\\n# this file is released ...response._vars=response._caller(edition_profile)\\n'"
p109
sS'code.rstrip'
p110
S'<built-in method rstrip of str object>'
p111
sS').replace'
p112
g85
sS'layer'
p113
S"'/home/dhruv/web2py/applications/critico/controllers/default.py'"
p114
ssg86
I206
sg87
(dp115
I201
S'def compile2(code, layer):'
p116
sI202
S'    """'
p117
sI203
S"    The ``+'\\\\n'`` is necessary else compile fails when code ends in a comment."
p118
sI204
S'    """'
p119
sI205
S''
sI206
S"    return compile(code.rstrip().replace('\\r\\n', '\\n') + '\\n', layer, 'exec')"
p120
sI207
S''
sI208
S''
sI209
S"def restricted(code, environment=None, layer='Unknown'):"
p121
sI210
S'    """'
p122
ssg99
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...response._vars=response._caller(edition_profile)\\n', layer='/home/dhruv/web2py/applications/critico/controllers/default.py')"
p123
sg101
S'compile2'
p124
sasS'pyver'
p125
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p126
sS'session'
p127
g69
(S'sg\x13\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>0fddd23c-6902-48a9-9194-fab9aa2d66bb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 4, 4, 15, 54, 34, 673673)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">city</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">country</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">date_of_birth</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">display_picture_blob</td><td style="vertical-align:top;">:</td><td><div>\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x01\xa4\x00\x00\x01\xa4\x08\x02\x00\x00\x00\xf1.\xc6b\x00\x00\x05\xc7IDATx\x9c\xec\xd6A\xb5\x9c`\x10\x06\xd1L\xce\x13\x81\x1b\x04\xa1\x07A\xb8a\xd9\x12b&quot;\xe1\x1fR\xf7\x1a\xe8oU\xa7\x7ff\xe6\x17\xc0\xff\xee\xf7\xea\x01\x00O\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12~V\x0fx\xb1\xf3\xbeVO\xa0\xe8\xd8\xf6\xd5\x13^\xc9g\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$\x88\x1d\x90 v@\x82\xd8\x01\tb\x07$|f\xe6\x99K\xe7}=s\x08x\x97c\xdb\x1f\xb8\xe2\xb3\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\xf8\xcc\xcc\xea\r|\x8b\xf3\xbeVO\xf8\xfb\x8em_=\x81\xaf\xe0\xb3\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x84\xcf\xcc\xac\xde\xf0V\xe7}\xad\x9e@\xd1\xb1\xed\xab&#x27;\xbc\x92\xcf\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; \xe133\xab7\x00\xfcs&gt;; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; A\xec\x80\x04\xb1\x03\x12\xc4\x0eH\x10; \xe1O\x00\x00\x00\xff\xffNA\x1dY\xc2&lt;\xb7a\x00\x00\x00\x00IEND\xaeB`\x82</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">display_picture_name</td><td style="vertical-align:top;">:</td><td><div>auth_user.display_picture_name.9d2d617fb1f4065e.323539353138362e706e67.png</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>sqd@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Dhruv</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gender</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>5L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Kohli</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">state_</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_type</td><td style="vertical-align:top;">:</td><td><div>a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>qwe</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp128
sS'etype'
p129
S"<type 'exceptions.SyntaxError'>"
p130
sS'date'
p131
S'Sat Apr  4 15:59:10 2015'
p132
sS'response'
p133
g69
(S's\xab2\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f68c40e2b58&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_critico</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/critico/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/critico</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/default/edit/critico/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/default/edit/critico/views/default/edition_profile.html&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/default/edit/critico/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/default/edit/critico/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/default/edit/critico/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/default/edit/critico/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/critico/appadmin/index&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/default/errors/critico&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/default/about/critico&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/edition_profile/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_critico</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/dhruv/web2py/applications/critico/sessions/195/1be/127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d&#x27;, mode &#x27;rb+&#x27; at 0x7f68abd239c0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/dhruv/web2py/applications/critico/sessions/127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>daf7ba0a651c906bb7c8eb0c33a9ee62</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-694d5f0a-3c8c-4ee4-9397-1b99abc7821d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_critico</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>critico</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Critico</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/edition_profile.html</div></td></tr></table></div>'
tRp134
sS'locals'
p135
(dp136
g4
S"'/home/dhruv/web2py/applications/critico/controllers/default.py'"
p137
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ...response._vars=response._caller(edition_profile)\\n'"
p138
sssS'traceback'
p139
S'Traceback (most recent call last):\n  File "/home/dhruv/web2py/gluon/restricted.py", line 223, in restricted\n    ccode = compile2(code, layer)\n  File "/home/dhruv/web2py/gluon/restricted.py", line 206, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\', \'\\n\') + \'\\n\', layer, \'exec\')\n  File "/home/dhruv/web2py/applications/critico/controllers/default.py", line 663\n    rows = selectSubEdition(subEdId), showid=False\nSyntaxError: can\'t assign to function call\n'
p140
s.